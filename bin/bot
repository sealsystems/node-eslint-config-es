#!/usr/bin/env node

'use strict';

const shell = require('shelljs');

shell.echo('');
shell.echo('Linting...');
shell.echo('');
shell.exec('eslint . --ignore-path .gitignore --color', (codeEslint) => {
  if (codeEslint !== 0) {
    // eslint-disable-next-line no-process-exit
    process.exit(1);
  }

  shell.exec('npm run test --color always', (codeUnitTests) => {
    if (codeUnitTests !== 0) {
      // eslint-disable-next-line no-process-exit
      process.exit(2);
    }

    shell.echo('');
    shell.echo('Checking for missing or unused dependencies...');
    shell.echo('');
    shell.exec(
      'depcheck --ignores "@sealsystems/semantic-release,assertthat,eslint-*" --ignore-patterns=*.ts',
      (codeDepcheck, stdoutDepcheck) => {
        if (codeDepcheck !== 0) {
          // Treat only missing dependencies as error
          if (stdoutDepcheck.match(/Missing dependencies/)) {
            // eslint-disable-next-line no-process-exit
            process.exit(3);
          }
        }

        shell.echo('');
        shell.echo('Checking for outdated dependencies...');
        shell.echo('');
        shell.exec('npm outdated --color always', (codeOutdated) => {
          if (codeOutdated !== 0) {
            // Ignore errors
          }

          shell.echo('');
          shell.echo('Done.');
        });
      }
    );
  });
});
